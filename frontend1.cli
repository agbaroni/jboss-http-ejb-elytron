embed-server --server-config=standalone.xml

:write-attribute(name=name,value=frontend1)

/interface=management:write-attribute(name=inet-address,value="${jboss.bind.address.management:172.31.253.1}")
/interface=private:write-attribute(name=inet-address,value="${jboss.bind.address.private:172.31.253.1}")
/interface=public:write-attribute(name=inet-address,value="${jboss.bind.address:172.31.253.1}")
/interface=unsecure:write-attribute(name=inet-address,value="${jboss.bind.address.unsecure:172.31.253.1}")

/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=Frontend2:add(host=172.31.253.2,port=7600)

/subsystem=jgroups/stack=tcp/protocol=TCPPING:add(socket-bindings=[Frontend2])

/subsystem=jgroups:write-attribute(name=default-stack,value=tcp)

/subsystem=logging/console-handler=CONSOLE:add(level=INFO)

/subsystem=logging/root-logger=ROOT:add-handler(name=CONSOLE)

/subsystem=elytron/properties-realm=CustomManagementRealm:add(groups-properties={path=custom-management-groups.properties,relative-to=jboss.server.config.dir},users-properties={digest-realm-name=CustomManagementRealm,path=custom-management-users.properties,relative-to=jboss.server.config.dir},groups-attribute=groups)

/subsystem=elytron/security-domain=CustomManagementDomain:add(default-realm=CustomManagementRealm,realms=[{realm=CustomManagementRealm,role-decoder=groups-to-roles}],permission-mapper=default-permission-mapper)

/subsystem=elytron/http-authentication-factory=CustomManagementHTTPFactory:add(security-domain=CustomManagementDomain,http-server-mechanism-factory=global,mechanism-configurations=[{mechanism-realm-configurations=[{realm-name=CustomManagementRealm}],mechanism-name=DIGEST}])

/subsystem=elytron/sasl-authentication-factory=CustomManagementSASLFactory:add(security-domain=CustomManagementDomain,sasl-server-factory=configured,mechanism-configurations=[{mechanism-name=DIGEST-MD5,mechanism-realm-configurations=[{realm-name=CustomManagementRealm}]}])

/core-service=management/management-interface=http-interface:undefine-attribute(name=security-realm)

/core-service=management/management-interface=http-interface:write-attribute(name=http-authentication-factory,value=CustomManagementHTTPFactory)

/core-service=management/management-interface=http-interface:write-attribute(name=http-upgrade.sasl-authentication-factory,value=CustomManagementSASLFactory)

/core-service=management/access=authorization:write-attribute(name=provider,value=rbac)

/core-service=management/access=authorization/role-mapping=SuperUser/include=gAdminRW:add(name=AdminRW,type=GROUP)

/core-service=management/access=authorization/role-mapping=Operator:add()

/core-service=management/access=authorization/role-mapping=Operator/include=gAdminRO:add(name=AdminRO,type=GROUP)

/subsystem=elytron/properties-realm=CustomApplicationRealm:add(groups-properties={path=custom-application-groups.properties,relative-to=jboss.server.config.dir},users-properties={digest-realm-name=CustomApplicationRealm,path=custom-application-users.properties,relative-to=jboss.server.config.dir},groups-attribute=groups)

/subsystem=elytron/security-domain=CustomApplicationDomain:add(default-realm=CustomApplicationRealm,realms=[{realm=CustomApplicationRealm,role-decoder=groups-to-roles}],permission-mapper=default-permission-mapper)

/subsystem=elytron/http-authentication-factory=CustomApplicationHTTPFactory:add(security-domain=CustomApplicationDomain,http-server-mechanism-factory=global,mechanism-configurations=[{mechanism-realm-configurations=[{realm-name=CustomApplicationRealm}],mechanism-name=DIGEST}])

/subsystem=elytron/sasl-authentication-factory=CustomApplicationSASLFactory:add(security-domain=CustomApplicationDomain,sasl-server-factory=configured,mechanism-configurations=[{mechanism-name=DIGEST-MD5,mechanism-realm-configurations=[{realm-name=CustomApplicationRealm}]}])

/subsystem=ejb3/application-security-domain=AppDomain:add(security-domain=CustomApplicationDomain)

/subsystem=ejb3/remoting-profile=CustomProfile:add()
/subsystem=ejb3/remoting-profile=CustomProfile/remote-http-connection=ejb-http-connection:add(uri="http://172.31.254.1:8080/wildfly-services")

/subsystem=remoting/http-connector=http-remoting-connector:undefine-attribute(name=security-realm)

/subsystem=undertow/application-security-domain=AppDomain:add(http-authentication-factory=CustomApplicationHTTPFactory)

/subsystem=elytron/properties-realm=CustomRemotingRealm:add(groups-properties={path=custom-remoting-groups.properties,relative-to=jboss.server.config.dir},users-properties={digest-realm-name=CustomRemotingRealm,path=custom-remoting-users.properties,relative-to=jboss.server.config.dir},groups-attribute=groups)

/subsystem=elytron/security-domain=CustomRemotingDomain:add(default-realm=CustomRemotingRealm,realms=[{realm=CustomRemotingRealm,role-decoder=groups-to-roles}],permission-mapper=default-permission-mapper)

/subsystem=elytron/sasl-authentication-factory=CustomRemotingSASLFactory:add(security-domain=CustomRemotingDomain,mechanism-configurations=[{mechanism-name=DIGEST-MD5,mechanism-realm-configurations=[{realm-name=CustomRemotingRealm}]}],sasl-server-factory=global)

/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=sasl-authentication-factory,value=CustomRemotingSASLFactory)

/subsystem=remoting/http-connector=http-remoting-connector:write-attribute(name=sasl-protocol,value=http)

# The security-domain attribute is set only for propagation, so here we don't need it
/subsystem=elytron/authentication-configuration=CustomAuthConfiguration:add(authentication-name=remote1,credential-reference={clear-text=password})

/subsystem=elytron/authentication-context=CustomAuthContext:add(match-rules=[{authentication-configuration=CustomAuthConfiguration,match-path="/wildfly-services"}])
/subsystem=elytron/authentication-context=CustomAuthContext:write-attribute(name=match-rules,value=[{authentication-configuration=CustomAuthConfiguration,match-host=172.31.254.1,match-port=8080,match-path="/wildfly-services",match-user=anonymous}])

/subsystem=elytron:write-attribute(name=default-authentication-context,value=CustomAuthContext)

module add --name=org.postgresql --resources=../../../postgresql-42.5.4.jar --dependencies=javax.api,javax.transaction.api,javaee.api

/subsystem=datasources/jdbc-driver=postgresql:add(driver-name=postgresql,driver-module-name=org.postgresql,driver-xa-datasource-class-name=org.postgresql.xa.PGXADataSource)

xa-data-source add --name=TestDS --jndi-name=java:jboss/TestDS --driver-name=postgresql --user-name=test --password=test --validate-on-match=true --background-validation=false --valid-connection-checker-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLValidConnectionChecker --exception-sorter-class-name=org.jboss.jca.adapters.jdbc.extensions.postgres.PostgreSQLExceptionSorter --xa-datasource-properties={"ServerName"=>"172.31.252.1","PortNumber"=>"5433","DatabaseName"=>"test"}
